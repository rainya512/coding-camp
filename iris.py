# -*- coding: utf-8 -*-
"""iris.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1si0oHOAvHt7rTITBLVhtbdpwWTtayuF2
"""

import sklearn.datasets
ds = sklearn.datasets.load_iris()
ds

import pandas as pd

df = pd.DataFrame(ds["data"], columns=ds["feature_names"])
df

code_species_zip = zip(range(3), ds["target_names"])
list(code_species_zip)

code_species_zip = zip(range(3), ds["target_names"])
code_species_map = dict(code_species_zip)
code_species_map

df["species"] = [code_species_map[c] for c in ds["target"]]
df

sums_by_species = df.groupby("species").sum()
sums_by_species

import matplotlib.pyplot as plt

var = "sepal width (cm)"
sums_by_species[var].plot(kind='pie',fontsize=20)
plt.show()

import matplotlib.pyplot as plt

var = "sepal width (cm)"
sums_by_species[var].plot(kind='pie',fontsize=20)
plt.ylabel(var, horizontalalignment='left')
plt.show()

import matplotlib.pyplot as plt

var = "sepal width (cm)"
sums_by_species[var].plot(kind='pie',fontsize=20)
plt.ylabel(var, horizontalalignment='left')
plt.title("clasified by " + var, fontsize=25)
plt.show()

import matplotlib.pyplot as plt

var = "sepal width (cm)"
sums_by_species[var].plot(kind='pie',fontsize=20)
plt.ylabel(var, horizontalalignment='left')

plt.savefig("myfile.png")
plt.close()

import matplotlib.pyplot as plt

sums_by_species.plot(kind='pie',subplots=True, layout=(2,2), legend=False)
plt.title("features of species")
plt.show()

import matplotlib.pyplot as plt

var = "sepal width (cm)"
sums_by_species[var].plot(kind='bar', fontsize=20, rot=30)
plt.ylabel(var, horizontalalignment='left')
plt.title("clasified by " + var, fontsize=25)
plt.show()

import matplotlib.pyplot as plt

sums_by_species.plot(kind='bar',subplots=True, rot=0)
plt.suptitle("features of all species")
plt.show()

import matplotlib.pyplot as plt

df.plot(kind='hist',subplots=True, layout=(2,2))
plt.suptitle("Iris Histogram")
plt.show()

for spec in df["species"].unique():
  forspec = df[df["species"] == spec]
  forspec['petal width (cm)'].plot(kind='hist', alpha=0.4, label=spec)

plt.show()

for spec in df["species"].unique():
  forspec = df[df["species"] == spec]
  forspec['petal width (cm)'].plot(kind='hist', alpha=0.4, label=spec)

plt.legend(loc='upper right')
plt.show()

df["species"] == "setosa"

from sklearn.model_selection import train_test_split
import pandas as pd
import numpy as np

X_train, X_test, y_train, y_test = train_test_split(
    ds['data'], ds['target'], random_state=0
)

print("X_train 크기: {}".format(X_train.shape))
print("y_train 크기: {}".format(y_train.shape))

print("X_test 크기: {}".format(X_test.shape))
print("y_test 크기: {}".format(y_test.shape))

from sklearn.neighbors import KNeighborsClassifier

knn = KNeighborsClassifier(n_neighbors=1)
knn.fit(X_train, y_train)

X_new = np.array([[2.5, 1.2, 4.1, 2.3]])
print("X_new.shape: {}".format(X_new.shape))

prediction = knn.predict(X_new)
print("예측: {}".format(prediction))
print("예측한 타깃의 이름: {}".format(
    ds['target_names'][prediction]
))

